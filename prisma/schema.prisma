// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model buildings {
  id         Int       @id @default(autoincrement())
  name       String    @default("64") @db.VarChar(255)
  desc       String    @default("128") @db.VarChar(255)
  address    Json
  attributes Json
  is_active  Boolean
  created_at DateTime  @default(now()) @db.Timestamp
  updated_at DateTime  @default(now()) @db.Timestamp
  floors     floors[]
  building_users building_users[]

  @@map("buildings")
  @@index([name]) // Add index for name field
  @@index([is_active]) // Add index for is_active field
}

model floors {
  id          Int       @id @default(autoincrement())
  building_id Int
  name        String    @db.VarChar(64)
  desc        String    @db.VarChar(128)
  elevation   Int
  floor_map   String    @db.VarChar(1024)
  attributes  Json
  is_active   Boolean
  created_at  DateTime  @default(now()) @db.Timestamp
  updated_at  DateTime  @default(now()) @db.Timestamp
  building    buildings @relation(fields: [building_id], references: [id])

  @@map("floors")
  @@index([name]) // Add index for name field
  @@index([is_active]) // Add index for is_active field
}

model audit_log {
  id         Int      @id @default(autoincrement())
  type_id    Int
  meta_data  Json
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp
  audit_log_type audit_log_type @relation(fields: [type_id], references: [id])

  @@map("audit_log")
}

model audit_log_type {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(24)
  desc       String   @db.VarChar(128)
  priority   Int
  attributes Json
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp
  audit_log audit_log[]

  @@map("audit_log_type")
}

model User {
  id             Int              @id @default(autoincrement())
  user_name      String           @unique @db.VarChar(12)
  first_name     String           @db.VarChar(64)
  last_name      String?          @db.VarChar(64)
  email          String           @unique @db.VarChar(128)
  hashed_password String           @db.VarChar(1024)
  is_sso         Boolean          @default(false)
  sso_type_id    Int?
  role_id        Int
  is_active      Boolean          @default(true)
  created_at     DateTime         @default(now()) @db.Timestamp
  updated_at     DateTime         @default(now()) @db.Timestamp
  role           UserRole         @relation(fields: [role_id], references: [id])
  building_users building_users[]
  @@map("users")
}

model Sso {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(255)
  desc       String    @db.VarChar(255)
  attributes Json
  is_active  Boolean
  created_at DateTime  @default(now()) @db.Timestamp
  updated_at DateTime  @default(now()) @db.Timestamp
   @@map("sso")
}

model UserRole {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(12)
  desc        String        @db.VarChar(64)
  is_active   Boolean       @default(true)
  created_at  DateTime      @default(now()) @db.Timestamp
  updated_at  DateTime      @default(now()) @db.Timestamp
  permissions Permission[]
  users       User[]
   @@map("user_roles")
}

model Permission {
  id         Int      @id @default(autoincrement())
  role_id    Int
  permission Json
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp
  role       UserRole @relation(fields: [role_id], references: [id])
    @@map("permissions")
}

model building_users {
  id         Int       @id @default(autoincrement())
  building_id Int
  user_id  Int
  created_at DateTime @default(now()) @db.Timestamp
  updated_at DateTime @default(now()) @db.Timestamp
   building buildings @relation(fields: [building_id], references: [id])
   user User @relation(fields: [user_id], references: [id])

  @@map("building_users")
}